package traductores;

import java.util.Stack;
import java.util.ArrayList;

public class Sintactico {
	ArrayList<Token> lista_token = new ArrayList<>();
	String datos="";
	
	//Constructor parametrizado
	public Sintactico(ArrayList<Token> lista_token) {
		this.lista_token = lista_token;
	}
	
	public boolean LR_1_2() {
		
		int[][] tablaLR = {
				{5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,0,1,2,3,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,0,6,2,3,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{-4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{-5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,-7,10,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{13,0,0,0,0,-10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{-6,-6,0,0,0,0,0,-6,0,-6,-6,-6,0,0,0,0,0,0,-6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,-7,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,21,0,-12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,-8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{-9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{26,27,0,0,0,0,0,-15,0,28,29,30,0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,22,23,0,25,0,0,0,0,0,31,0},
				{0,0,0,0,0,-11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{26,27,0,0,0,0,0,-15,0,28,29,30,0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,34,23,0,25,0,0,0,0,0,31,0},
				{-17,-17,0,0,0,0,0,-17,0,-17,-17,-17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{-18,-18,0,0,0,0,0,-18,0,-18,-18,-18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,37,0,0,0,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,42,0,0,44,0,0,0,0,0,0,0,0,43,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,41,0},
				{0,0,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{-14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,-16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,-7,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,42,0,0,44,0,0,0,0,0,0,0,0,43,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,47,41,0},
				{0,42,0,0,44,-29,0,0,0,0,0,0,0,43,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,0,49,41,0},
				{0,42,0,0,44,0,0,0,0,0,0,0,0,43,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,41,0},
				{0,42,0,0,44,0,0,0,0,0,0,0,0,43,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,41,0},
				{0,0,52,0,0,0,0,0,0,0,0,0,0,0,53,54,55,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,-33,-33,0,-33,0,0,0,0,0,0,0,0,-33,-33,-33,-33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,-34,-34,37,-34,0,0,0,0,0,0,0,0,-34,-34,-34,-34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,-35,-35,0,-35,0,0,0,0,0,0,0,0,-35,-35,-35,-35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,42,0,0,44,0,0,0,0,0,0,0,0,43,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,57,41,0},
				{-25,-25,0,0,0,0,0,-25,0,-25,-25,-25,-25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,21,0,-12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,58,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,59,0,0,0,0,0,0,0,0,0,0,0,53,54,55,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,62,0,-31,0,0,0,0,0,0,0,0,53,54,55,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,61,0,0,0},
				{0,0,0,0,0,63,0,0,0,0,0,0,0,0,53,54,55,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,64,0,0,0,0,0,0,0,0,53,54,55,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{-24,-24,0,0,0,0,0,-24,0,-24,-24,-24,-24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,42,0,0,44,0,0,0,0,0,0,0,0,43,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,41,0},
				{0,42,0,0,44,0,0,0,0,0,0,0,0,43,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,41,0},
				{0,42,0,0,44,0,0,0,0,0,0,0,0,43,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,41,0},
				{0,42,0,0,44,0,0,0,0,0,0,0,0,43,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,68,41,0},
				{0,0,0,0,0,69,0,0,0,0,0,0,0,0,53,54,55,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,-13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{-21,-21,0,0,0,0,0,-21,0,-21,-21,-21,-21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,-36,-36,0,-36,0,0,0,0,0,0,0,0,-36,-36,-36,-36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,-30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,42,0,0,44,0,0,0,0,0,0,0,0,43,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,70,41,0},
				{0,27,0,0,0,0,74,0,0,28,29,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,0,73,0,0,0,31,71},
				{0,0,0,0,0,0,74,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,75,0,0,0,0,0},
				{0,0,-40,-40,0,-40,0,0,0,0,0,0,0,0,-40,-40,-40,-40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,-41,-41,0,-41,0,0,0,0,0,0,0,0,-41,-41,-41,-41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,-42,-42,0,-42,0,0,0,0,0,0,0,0,-42,-42,-42,-42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,-43,-43,0,-43,0,0,0,0,0,0,0,0,-43,-43,-43,-43,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,-39,-39,0,-39,0,0,0,0,0,0,0,0,-39,-39,-39,-39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,62,0,-31,0,0,0,0,0,0,0,0,53,54,55,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,0,0,0},
				{-26,-26,0,0,0,0,0,-26,0,-26,-26,-26,78,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,77,0,0,0,0,0,0},
				{-37,-37,0,0,0,0,0,-37,0,-37,-37,-37,-37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{-38,-38,0,0,0,0,0,-38,0,-38,-38,-38,-38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,27,0,0,0,0,0,-19,0,28,29,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,79,80,0,0,0,0,0,31,0},
				{-23,-23,0,0,0,0,0,-23,0,-23,-23,-23,-23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,-32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{-22,-22,0,0,0,0,0,-22,0,-22,-22,-22,-22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,27,0,0,0,0,74,0,0,28,29,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,0,73,0,0,0,31,81},
				{0,0,0,0,0,0,0,82,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,27,0,0,0,0,0,-19,0,28,29,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,80,0,0,0,0,0,31,0},
				{-27,-27,0,0,0,0,0,-27,0,-27,-27,-27,-27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{-28,-28,0,0,0,0,0,-28,0,-28,-28,-28,-28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,-20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
		};
		
		int acciones[] = new int[] {
			1,2,3,4,6,8,12,17,18,20,22,23,24,25,31,34,40,41,47,48,49,
			50,51,57,58,61,65,66,67,68,70,72,73,75,76,77,79,80,81,83
		};
		
		Stack<String> pila = new Stack<>();
		int fila, columna, accion, borrar=0, i=0;
		boolean desp=false;
		
		//Inicio
		lista_token.add(new Token("$", 18, "Pesos"));
		//pila.push("$");
		pila.push("0"); //La pila inicia con un 0
		
		fila = Integer.parseInt(pila.peek()); //Se obtiene el valor de la pila
		columna = lista_token.get(0).getNumero_token();	//Se obtiene el valor del token
		accion =  tablaLR[fila][columna];	//Se determina el valor de la accion
		
		for(String p : pila) //Se guarda la pila
			datos = datos+p;
		datos = datos+"\n";
		
			
		while(accion != 0) {
				
			if(accion > 0) {
				
				for(int j=0; j<acciones.length; j++) {
					if(accion == acciones[j]) {
						desp = false;
						break;
					}
					else
						desp = true;
				}
				
				if(desp) {	//Se realiza un desplazamiento
					pila.push(lista_token.get(i).getLexema());
					pila.push(Integer.toString(accion));
				}
				
				//Se obtiene el valor de la pila y se determina la accion
				fila = Integer.parseInt(pila.peek()); //Se obtiene el valor de la pila
				columna = lista_token.get(i+1).getNumero_token();	//Se obtiene el valor del token
				accion =  tablaLR[fila][columna];	//Se determina el valor de la accion
				
				for(String p : pila) //Se guarda la pila
					datos = datos+p;
				datos = datos+"\n";
			}
			else if(accion < 0) {	//Se realiza una reduccion
                            switch (accion) {
                            //Si es r0 se acepta la cadena
                                case -1:
                                    return true;
                                case -2:
                                    //Si es R1
                                    borrar = 0;
                                    columna= 20;
                                    break;
                                case -3:
                                    //Si es R2
                                    borrar = 4;
                                    columna= 20;
                                    break;
                                case -4:
                                    borrar = 2;
                                    columna= 21;
                                    break;
                                case -5:
                                    borrar = 2;
                                    columna= 21;
                                    break;
                                case -6:
                                    borrar = 8;
                                    columna= 22;
                                    break;
                                case -7:
                                    borrar = 0;
                                    columna= 23;
                                    break;
                                case -8:
                                    borrar = 6;
                                    columna= 23;
                                    break;
                                case -9:
                                    borrar = 12;
                                    columna= 24;
                                    break;
                                case -10:
                                    borrar = 0;
                                    columna= 25;
                                    break;
                                case -11:
                                    borrar = 6;
                                    columna= 25;
                                    break;
                                case -12:
                                    borrar = 0;
                                    columna= 26;
                                    break;
                                case -13:
                                    borrar = 8;
                                    columna= 26;
                                    break;
                                case -14:
                                    borrar = 6;
                                    columna= 27;
                                    break;
                                case -15:
                                    borrar = 0;
                                    columna= 28;
                                    break;
                                case -16:
                                    borrar = 4;
                                    columna= 28;
                                    break;
                                case -17:
                                    borrar = 2;
                                    columna= 29;
                                    break;
                                case -18:
                                    borrar = 2;
                                    columna= 29;
                                    break;
                                case -19:
                                    borrar = 0;
                                    columna= 30;
                                    break;
                                case -20:
                                    borrar = 4;
                                    columna= 30;
                                    break;
                                case -21:
                                    borrar = 8;
                                    columna= 31;
                                    break;
                                case -22:
                                    borrar = 12;
                                    columna= 31;
                                    break;
                                case -23:
                                    borrar = 10;
                                    columna= 31;
                                    break;
                                case -24:
                                    borrar = 6;
                                    columna= 31;
                                    break;
                                case -25:
                                    borrar = 4;
                                    columna= 31;
                                    break;
                                case -26:
                                    borrar = 0;
                                    columna= 32;
                                    break;
                                case -27:
                                    borrar = 4;
                                    columna= 32;
                                    break;
                                case -28:
                                    borrar = 6;
                                    columna= 33;
                                    break;
                                case -29:
                                    borrar = 0;
                                    columna= 34;
                                    break;
                                case -30:
                                    borrar = 4;
                                    columna= 34;
                                    break;
                                case -31:
                                    borrar = 0;
                                    columna= 35;
                                    break;
                                case -32:
                                    borrar = 6;
                                    columna= 35;
                                    break;
                                case -33:
                                    borrar = 2;
                                    columna= 36;
                                    break;
                                case -34:
                                    borrar = 2;
                                    columna= 36;
                                    break;
                                case -35:
                                    borrar = 2;
                                    columna= 36;
                                    break;
                                case -36:
                                    borrar = 8;
                                    columna= 37;
                                    break;
                                case -37:
                                    borrar = 2;
                                    columna= 38;
                                    break;
                                case -38:
                                    borrar = 2;
                                    columna= 38;
                                    break;
                                case -39:
                                    borrar = 6;
                                    columna= 36;
                                    break;
                                case -40:
                                    borrar = 6;
                                    columna= 36;
                                    break;
                                case -41:
                                    borrar = 6;
                                    columna= 36;
                                    break;
                                case -42:
                                    borrar = 6;
                                    columna= 36;
                                    break;
                                case -43:
                                    borrar = 6;
                                    columna= 36;
                                    break;
                                default:
                                    break;
                            }
					
				//Se reduce la pila E veces
				for(int j=0; j<borrar; j++) {
					pila.pop();
				}
					
				//Se ingresa la accion y la regla a la pila
				fila = Integer.parseInt(pila.peek()); //Se obtiene el valor de la pila
				//columna = 3; //3 es el valor de E
				accion =  tablaLR[fila][columna];	//Se determina el valor de la accion
				pila.push("Accion("+columna+")");
				pila.push(Integer.toString(accion));

				fila = Integer.parseInt(pila.peek()); //Se obtiene el valor de la pila
				columna = lista_token.get(i).getNumero_token();	//Se obtiene el valor del token
				accion =  tablaLR[fila][columna];	//Se determina el valor de la accion
				i--;
				
				for(String p : pila) //Se guarda la pila
					datos = datos+p;
				datos = datos+"\n";
			}
			else if(accion == 0)
				return false;
			
			if(i<lista_token.size()-1)
				i++;
		}
		return false;
	}
	
	public String datoSintactico() {
		return datos;
	}

}
